{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/javascript/js-dom/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Tech Notes"}},"markdownRemark":{"id":"d6369b77-666f-5b05-9dc0-83895c94c26b","excerpt":"are an objects which in assembly compose  or .  elements are element nodes, simple text is a .  also create\nattribute nodes. Element nodes contain properties…","html":"<p><code class=\"language-text\">element nodes</code> are an objects which in assembly compose <code class=\"language-text\">Document Object Model</code> or <code class=\"language-text\">DOM</code>.</p>\n<p><code class=\"language-text\">html</code> elements are element nodes, simple text is a <code class=\"language-text\">text node</code>. <code class=\"language-text\">html attributes</code> also create\nattribute nodes.</p>\n<p>Element nodes contain properties and methods, which may be interacted with JavaScript.</p>\n<h2>Querying DOM Elements</h2>\n<p>The most basic and generic way to get <code class=\"language-text\">DOM</code> element from <code class=\"language-text\">html</code> page is <code class=\"language-text\">querySelector(&lt;query>)</code>,\nwhich returns single element and <code class=\"language-text\">querySelectorAll(&lt;query>)</code> which returns collection of elements.</p>\n<p><code class=\"language-text\">&lt;query></code> has a special syntax, similar to <code class=\"language-text\">css</code> elements syntax:</p>\n<ul>\n<li>To get element by it’s class name <code class=\"language-text\">.class-name</code></li>\n<li>To get element by it’s id <code class=\"language-text\">#element-id-name</code></li>\n<li>To get element by it’s tag <code class=\"language-text\">tag-name</code></li>\n</ul>\n<p>But this is not limited to simple tag/class/id, actually <code class=\"language-text\">querySelector</code> may receive more complex\ncss element queries, like:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> $firstListElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ul li:first-child\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>These <code class=\"language-text\">querySelectorAll</code> method, which returns collection of <code class=\"language-text\">DOM</code> nodes return <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/NodeList\">NodeList</a>, which is a data structure, similar to array, but it is not an actual array.</p>\n<p>There are more specific method for retrieving elements.</p>\n<p>To get elements by it’s <code class=\"language-text\">id</code> there is <code class=\"language-text\">getElementById()</code>, which returns single element.</p>\n<p>It is also possible to get group of elements by their <code class=\"language-text\">tag</code> name - <code class=\"language-text\">getElementsByTagName(&lt;tag_nam>)</code></p>\n<p><code class=\"language-text\">getElementsByClassName(&lt;class-name>)</code> - returns collection of nodes, found by given class name.</p>\n<h2>Traversing DOM</h2>\n<p>To traverse the <code class=\"language-text\">DOM</code> there are a bunch of methods on node:</p>\n<ul>\n<li><code class=\"language-text\">parentNode</code> - get parent of current node.</li>\n<li><code class=\"language-text\">nextSibling</code> - get next sibling on the same level.</li>\n<li><code class=\"language-text\">previousSibling</code> - get previous sibling on the same level.</li>\n<li><code class=\"language-text\">firstChild</code> - get first child of this element.</li>\n<li><code class=\"language-text\">lastChild</code> - get last child of this element.</li>\n<li><code class=\"language-text\">childNodes</code> - get collection of all element’s children including text nodes.</li>\n<li><code class=\"language-text\">children</code> - get children element nodes without text nodes</li>\n</ul>\n<h2>Modification Of DOM Elements</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">element.innerHTML</code> - allows to get or set inner content of current element</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>li - 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>li - 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>li - 3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> $list <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ul\"</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>$list<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// &lt;li>li - 1&lt;/li></span>\n<span class=\"token comment\">// &lt;li>li - 2&lt;/li></span>\n<span class=\"token comment\">// &lt;li>li - 3&lt;/li></span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">element.innerText</code> - allows to get or set internal text content of given element and all it’s children:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>li - 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>li - 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>li - 3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> $list <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ul\"</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>$list<span class=\"token punctuation\">.</span>innerText<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// li - 1</span>\n<span class=\"token comment\">// li - 2</span>\n<span class=\"token comment\">// li - 3</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">element.insertAdjacentHTML(position, value)</code> - inserts html content on specified position inside of\nsource element. Where <code class=\"language-text\">position</code> may be:</p>\n<ul>\n<li><code class=\"language-text\">beforebegin</code> - before the element. In this case source element should have parent.</li>\n<li><code class=\"language-text\">afterbegin</code> - as a first child</li>\n<li><code class=\"language-text\">beforeend</code> - as a last child</li>\n<li><code class=\"language-text\">afterend</code> - after the source element(which should have a parent)</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">element.style</code> - object, which contains style css properties, assigned to this element.\n<em>Important to notice: name of style attribute in js will be transformed to camel case, e.g. <code class=\"language-text\">background-color</code> -> <code class=\"language-text\">backgroundColor</code></em></p>\n</li>\n<li>\n<p><code class=\"language-text\">element.getAttribute(&lt;attribute-name>)</code> - allows to get html attribute value</p>\n</li>\n<li>\n<p><code class=\"language-text\">element.setAttribute(&lt;attribute-name>, &lt;value>)</code> - allows to change node attribute value</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> $input <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text-input\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> inputValue <span class=\"token operator\">=</span> $input<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">)</span>\n$input<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"new text\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">element.removeAttribute(&lt;attribute-name>)</code> - remove node attribute</p>\n</li>\n<li>\n<p><code class=\"language-text\">document.createElement(&lt;tag-name>)</code> - creates new element node of given html tag</p>\n<p><em>Note: this method is always called on <code class=\"language-text\">document</code> object and not on any other node element</em></p>\n</li>\n<li>\n<p><code class=\"language-text\">element.appendChild(&lt;child>)</code> - insert given element to target element children</p>\n</li>\n<li>\n<p><code class=\"language-text\">element.lastElementChild</code> - selects last child of element</p>\n<ul>\n<li><code class=\"language-text\">before</code> - selects element before this</li>\n<li><code class=\"language-text\">after</code> - selects element after this</li>\n<li><code class=\"language-text\">replaceWith()</code> - replace this element with new provided</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">element.insertBefore(&lt;element>)</code> - insert given element before target element as a sibling</p>\n</li>\n<li>\n<p><code class=\"language-text\">element.replaceChild(newElement, oldElement)</code> - insert <code class=\"language-text\">newElement</code> instead of <code class=\"language-text\">oldElement</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">element.remove()</code> - removes element from DOM</p>\n</li>\n</ul>","frontmatter":{"title":"JS - DOM","date":"March 24, 2022","description":"Browser Document Object Model and manipulating it with JavaScript"}},"previous":{"fields":{"slug":"/csharp/runnin-asp-project/"},"frontmatter":{"title":"Asp.Net Core Project Configuration"}},"next":{"fields":{"slug":"/csharp/cli-app/"},"frontmatter":{"title":"Creating C# CLI App"}}},"pageContext":{"id":"d6369b77-666f-5b05-9dc0-83895c94c26b","previousPostId":"b629b3a9-b2c8-52fb-b9c4-74060694c99a","nextPostId":"a5786029-4d28-5cff-8670-701e9decec0f"}},
    "staticQueryHashes": ["2063783301","2841359383","3274528899"]}
{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/javascript/strings/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Tech Notes"}},"markdownRemark":{"id":"e9c9d981-1995-5159-9bdc-f896d875a47d","excerpt":"String Object Vs String Primitive There is a difference between value and reference strings in . String primitives: String objects: String Methods split: Toâ€¦","html":"<h2>String Object Vs String Primitive</h2>\n<p>There is a difference between value and reference strings in <code class=\"language-text\">js</code>.</p>\n<p>String primitives:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> s1 <span class=\"token operator\">=</span> <span class=\"token string\">\"s1\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> s2 <span class=\"token operator\">=</span> <span class=\"token string\">'s2'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> s3 <span class=\"token operator\">=</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> s1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"string\"</span></code></pre></div>\n<p>String objects:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> s1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> s1<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// \"object\"</span></code></pre></div>\n<h2>String Methods</h2>\n<p><strong>split:</strong></p>\n<p>To split given string by specified character use <code class=\"language-text\">String.split(&lt;divisior>, &lt;limit>)</code> method on this\nstring, where <code class=\"language-text\">divisior</code> should also be some string pattern on which original string will be divided:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"val1;;val2;;val3\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> parts <span class=\"token operator\">=</span> str1<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\";;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// parts: ['val1', 'val2', 'val3']</span></code></pre></div>\n<p><strong>join:</strong></p>\n<p><code class=\"language-text\">join</code> is an array method, but it returns a string of all elements of this array, combined into a\nsingle string with specified divisior:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> parts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"second\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"third\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> parts<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"; \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// str: \"first; second; third\"</span></code></pre></div>\n<p>If divisior is not specified, default divisior will be <code class=\"language-text\">,</code>.</p>\n<p><strong>Accessing individual characters:</strong></p>\n<p>To get character from string with given index use <code class=\"language-text\">charAt</code> method:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"abcde\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> charB <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// or</span>\n<span class=\"token keyword\">const</span> charB_Ecma5 <span class=\"token operator\">=</span> str<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Multiline strings:</strong></p>\n<p>To create long strings on multiple lines it is possible to add multiple strings with <code class=\"language-text\">+</code>, but the\nfollowing will have same result:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"line1 \\\n  line2 \\\n  line3\"</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"JS - Strings","date":"March 12, 2022","description":"Working with Javascript strings"}},"previous":{"fields":{"slug":"/javascript/js-iterables/"},"frontmatter":{"title":"JS - Iterables And Collections"}},"next":{"fields":{"slug":"/rust/destructuring/"},"frontmatter":{"title":"Rust Object Destructuring"}}},"pageContext":{"id":"e9c9d981-1995-5159-9bdc-f896d875a47d","previousPostId":"598ef786-417a-5c6a-b49d-59ea1f9a224a","nextPostId":"0c480cc4-511a-5cd0-9076-07772af0ea11"}},
    "staticQueryHashes": ["2063783301","2841359383","3274528899"]}
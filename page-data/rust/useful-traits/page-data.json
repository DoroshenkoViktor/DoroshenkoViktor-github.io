{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/rust/useful-traits/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Tech Notes"}},"markdownRemark":{"id":"f8b495af-7e95-58a9-936a-55206f5cffa3","excerpt":"Comparison std::cmp::PartialEq std::cmp::PartialOrd Lifecycle std::ops::Drop Comparison std::cmp::PartialEq Full Doc Trait for equality comparisons which areâ€¦","html":"<ul>\n<li><a href=\"#comparison\">Comparison</a>\n<ul>\n<li><a href=\"#stdcmppartialeq\">std::cmp::PartialEq</a></li>\n<li><a href=\"#stdcmppartialord\">std::cmp::PartialOrd</a></li>\n</ul>\n</li>\n<li><a href=\"#lifecycle\">Lifecycle</a>\n<ul>\n<li><a href=\"#stdopsdrop\">std::ops::Drop</a></li>\n</ul>\n</li>\n</ul>\n<h2>Comparison</h2>\n<h3>std::cmp::PartialEq</h3>\n<p><a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialEq.html#\">Full Doc</a></p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">pub</span> <span class=\"token keyword\">trait</span> <span class=\"token class-name\">PartialEq</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">Rhs</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">Self</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">where</span> <span class=\"token class-name\">Rhs</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">?</span><span class=\"token class-name\">Sized</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span><span class=\"token class-name\">Rhs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">bool</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">ne</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span><span class=\"token class-name\">Rhs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">bool</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">...</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Trait for equality comparisons which are partial equivalence relations.</p>\n<p><code class=\"language-text\">x.eq(y)</code> can also be written <code class=\"language-text\">x == y</code>, and <code class=\"language-text\">x.ne(y)</code> can be written <code class=\"language-text\">x != y</code>.</p>\n<p>Implementations must ensure that <code class=\"language-text\">eq</code> and <code class=\"language-text\">ne</code> are consistent with each other.</p>\n<p>This trait can be used with <code class=\"language-text\">#[derive]</code>. When derived on <code class=\"language-text\">structs</code>, two instances are equal if all fields are equal, and not equal if any fields are not equal. When derived on <code class=\"language-text\">enums</code>, each variant is equal to itself and not equal to the other variants.</p>\n<h3>std::cmp::PartialOrd</h3>\n<p><a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialOrd.html\">Full Doc</a></p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">pub</span> <span class=\"token keyword\">trait</span> <span class=\"token class-name\">PartialOrd</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">Rhs</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">Self</span><span class=\"token operator\">></span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">PartialEq</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">Rhs</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">where</span> <span class=\"token class-name\">Rhs</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">?</span><span class=\"token class-name\">Sized</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">partial_cmp</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span><span class=\"token class-name\">Rhs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">Option</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">Ordering</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">lt</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span><span class=\"token class-name\">Rhs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">bool</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">...</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">le</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span><span class=\"token class-name\">Rhs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">bool</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">...</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">gt</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span><span class=\"token class-name\">Rhs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">bool</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">...</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">ge</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span><span class=\"token class-name\">Rhs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">bool</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">...</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Trait for values that can be compared for a sort-order.</p>\n<p>The <code class=\"language-text\">lt</code>, <code class=\"language-text\">le</code>, <code class=\"language-text\">gt</code>, and ge methods of this trait can be called using the <code class=\"language-text\">&lt;</code>, <code class=\"language-text\">&lt;=</code>, <code class=\"language-text\">></code>, and <code class=\"language-text\">>=</code> operators, respectively.</p>\n<p>The methods of this trait must be consistent with each other and with those of <code class=\"language-text\">PartialEq</code> in the following sense:</p>\n<p><code class=\"language-text\">a == b</code> if and only if <code class=\"language-text\">partial_cmp(a, b) == Some(Equal)</code>.\n<code class=\"language-text\">a &lt; b</code> if and only if <code class=\"language-text\">partial_cmp(a, b) == Some(Less)</code> (ensured by the default implementation).\n<code class=\"language-text\">a > b</code> if and only if partial_cmp(a, b) == Some(Greater) (ensured by the default implementation).\n<code class=\"language-text\">a &lt;= b</code> if and only if <code class=\"language-text\">a &lt; b || a == b</code> (ensured by the default implementation).\n<code class=\"language-text\">a >= b </code>if and only if <code class=\"language-text\">a > b || a == b </code>(ensured by the default implementation).\n<code class=\"language-text\">a != b</code> if and only if <code class=\"language-text\">!(a == b)</code> (already part of PartialEq).</p>\n<h2>Lifecycle</h2>\n<h3>std::ops::Drop</h3>\n<p><a href=\"https://doc.rust-lang.org/std/ops/trait.Drop.html\">Full Doc</a></p>\n<p>Represents deconstructior for object, which will be called, when object is deleting.</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">HasDrop</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">impl</span> <span class=\"token class-name\">Drop</span> <span class=\"token keyword\">for</span> <span class=\"token class-name\">HasDrop</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">drop</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">mut</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dropping HasDrop!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>e.g. <code class=\"language-text\">Box</code>, <code class=\"language-text\">Vec</code>, <code class=\"language-text\">String</code>, <code class=\"language-text\">File</code>, and <code class=\"language-text\">Process</code> implement the <code class=\"language-text\">Drop</code> trait to free resources.</p>","frontmatter":{"title":"Rust Useful Traits","date":"April 04, 2022","description":"List of good to know common traits in Rust"}},"previous":{"fields":{"slug":"/algorithms/graphs/"},"frontmatter":{"title":"Graphs"}},"next":{"fields":{"slug":"/javascript/js-events/"},"frontmatter":{"title":"JavaScript Events"}}},"pageContext":{"id":"f8b495af-7e95-58a9-936a-55206f5cffa3","previousPostId":"00439999-8568-503d-9cec-e2d08514a40d","nextPostId":"644d410c-9c0e-519d-87db-5069065a4416"}},
    "staticQueryHashes": ["2063783301","2841359383","3274528899"]}
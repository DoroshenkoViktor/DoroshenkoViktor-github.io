{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/rust/basics/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Tech Notes"}},"markdownRemark":{"id":"bf3ca32f-80de-5da9-9718-6c7b618e9115","excerpt":"Never Type  is an empty type in Rust, which can never be instanciated. It usually used to indicate that\nfunction or expression never returns value: Also it usedâ€¦","html":"<h2>Never Type</h2>\n<p><code class=\"language-text\">!</code> is an empty type in Rust, which can never be instanciated. It usually used to indicate that\nfunction or expression never returns value:</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token operator\">!</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Also it used in <code class=\"language-text\">match</code> expressions, when <code class=\"language-text\">continue</code>, <code class=\"language-text\">panic</code> or similar operation executed in\nsome arm. <code class=\"language-text\">!</code> useful here, because all arms should return value of same type and <code class=\"language-text\">never type</code> helps\nin this scenario.</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> guess<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u32</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">match</span> guess<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Ok</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> num<span class=\"token punctuation\">,</span>\n    <span class=\"token class-name\">Err</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"Rust Basics","date":"March 03, 2022","description":"Rust basic concepts and operators"}},"previous":{"fields":{"slug":"/python/setting-up/"},"frontmatter":{"title":"Python - Setting Up For Comfortable Work"}},"next":{"fields":{"slug":"/rust/cargo/"},"frontmatter":{"title":"Rust Package Management"}}},"pageContext":{"id":"bf3ca32f-80de-5da9-9718-6c7b618e9115","previousPostId":"bc00ff4a-bf9a-5187-8ece-a9bc71858369","nextPostId":"ca8558da-d20c-5ab6-8047-7f6d2778a999"}},
    "staticQueryHashes": ["2063783301","2841359383","3274528899"]}